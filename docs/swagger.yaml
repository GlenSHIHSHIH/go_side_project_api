definitions:
  backstagedto.CarouselCreateOrEditDTO:
    properties:
      endTime:
        description: 結束時間
        type: string
      id:
        type: integer
      name:
        description: 圖片名稱
        type: string
      picture:
        items:
          $ref: '#/definitions/forestagedto.PictureListData'
        type: array
      startTime:
        description: 開始時間
        type: string
      status:
        description: 狀態(開關)
        type: boolean
      weight:
        description: 權重
        type: integer
    type: object
  backstagedto.CarouselData:
    properties:
      createTime:
        description: 新增時間
        type: string
      createUserId:
        description: 新增人員
        type: integer
      endTime:
        description: 結束時間
        type: string
      id:
        type: integer
      name:
        description: 圖片名稱
        type: string
      startTime:
        description: 開始時間
        type: string
      status:
        description: 狀態(開關)
        type: boolean
      updateTime:
        description: 更新時間
        type: string
      updateUserId:
        description: 修改人員
        type: integer
      weight:
        description: 權重
        type: integer
    type: object
  backstagedto.CarouselIdDTO:
    properties:
      carousel:
        $ref: '#/definitions/backstagedto.CarouselData'
      picture:
        items:
          $ref: '#/definitions/forestagedto.PictureListData'
        type: array
    type: object
  backstagedto.CarouselListDTO:
    properties:
      carousel:
        items:
          $ref: '#/definitions/backstagedto.CarouselData'
        type: array
      pageData:
        $ref: '#/definitions/dto.PageForMultSearchDTO'
    type: object
  backstagedto.JwtRefTokenDTO:
    properties:
      refreshToken:
        type: string
    type: object
  backstagedto.JwtTokenDTO:
    properties:
      refreshToken:
        type: string
      token:
        type: string
    type: object
  backstagedto.JwtUserInfoDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  backstagedto.LoginDTO:
    properties:
      loginName:
        minLength: 4
        type: string
      password:
        minLength: 6
        type: string
    type: object
  backstagedto.LoginResponseDTO:
    properties:
      authorityJwt:
        $ref: '#/definitions/backstagedto.JwtTokenDTO'
      userInfo:
        $ref: '#/definitions/backstagedto.JwtUserInfoDTO'
    type: object
  backstagedto.MenuCreateOrEditDTO:
    properties:
      feature:
        type: string
      key:
        type: string
      name:
        type: string
      parent:
        type: string
      remark:
        type: string
      status:
        type: boolean
      url:
        type: string
      weight:
        type: integer
    type: object
  backstagedto.MenuDTO:
    properties:
      menu:
        items:
          $ref: '#/definitions/backstagedto.MenuNestData'
        type: array
    type: object
  backstagedto.MenuIdDTO:
    properties:
      menuById:
        $ref: '#/definitions/backstagedto.MenuViewData'
    type: object
  backstagedto.MenuNestData:
    properties:
      child:
        items:
          $ref: '#/definitions/backstagedto.MenuNestData'
        type: array
      feature:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      parent:
        type: integer
      status:
        type: boolean
      url:
        type: string
    type: object
  backstagedto.MenuViewData:
    properties:
      feature:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      parent:
        type: string
      remark:
        type: string
      status:
        type: boolean
      url:
        type: string
      weight:
        type: integer
    type: object
  backstagedto.MenuViewListDTO:
    properties:
      menuViewList:
        items:
          $ref: '#/definitions/backstagedto.MenuViewData'
        type: array
      pageData:
        $ref: '#/definitions/dto.PageForMultSearchDTO'
    type: object
  backstagedto.RoleCreateOrEditDTO:
    properties:
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      remark:
        type: string
      select:
        items:
          type: integer
        type: array
      status:
        type: boolean
      weight:
        type: integer
    type: object
  backstagedto.RoleIdDTO:
    properties:
      roleById:
        $ref: '#/definitions/backstagedto.RoleCreateOrEditDTO'
    type: object
  backstagedto.RoleListDTO:
    properties:
      pageData:
        $ref: '#/definitions/dto.PageForMultSearchDTO'
      roleList:
        items:
          $ref: '#/definitions/backstagedto.RoleViewData'
        type: array
    type: object
  backstagedto.RoleViewData:
    properties:
      createTime:
        type: string
      createUser:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      remark:
        type: string
      status:
        type: boolean
      updateTime:
        type: string
      updateUser:
        type: string
      weight:
        type: integer
    type: object
  backstagedto.UserCreateOrEditDTO:
    properties:
      email:
        description: Email
        type: string
      id:
        type: integer
      loginName:
        description: 登入帳號
        minLength: 4
        type: string
      name:
        description: 使用者名稱
        minLength: 4
        type: string
      password:
        description: 密碼
        minLength: 6
        type: string
      remark:
        description: 備註
        type: string
      select:
        description: 選的role
        items:
          type: string
        type: array
      status:
        description: 帳號狀態(false停用 true正常)
        type: boolean
      userType:
        description: 是否為系統用戶
        type: boolean
    type: object
  backstagedto.UserEditPwdDTO:
    properties:
      id:
        type: integer
      newPassword:
        description: 新密碼
        minLength: 6
        type: string
      orgPassword:
        description: 原始密碼
        type: string
      type:
        description: 1.重置密碼 2.修改密碼
        type: integer
    type: object
  backstagedto.UserIdDTO:
    properties:
      userById:
        $ref: '#/definitions/backstagedto.UserCreateOrEditDTO'
    type: object
  backstagedto.UserListDTO:
    properties:
      pageData:
        $ref: '#/definitions/dto.PageForMultSearchDTO'
      userList:
        items:
          $ref: '#/definitions/backstagedto.UserViewData'
        type: array
    type: object
  backstagedto.UserViewData:
    properties:
      createTime:
        type: string
      createUser:
        type: string
      email:
        description: Email
        type: string
      id:
        type: integer
      loginName:
        description: 登入帳號
        minLength: 4
        type: string
      name:
        description: 使用者名稱
        minLength: 4
        type: string
      remark:
        description: 備註
        type: string
      role:
        type: string
      status:
        description: 帳號狀態(false停用 true正常)
        type: boolean
      updateTime:
        type: string
      updateUser:
        type: string
      userType:
        description: 是否為系統用戶
        type: boolean
    type: object
  dto.PageDTO:
    properties:
      count:
        type: integer
      page:
        type: integer
      pageLimit:
        type: integer
      search:
        type: string
      searchCategory:
        type: string
      sort:
        type: string
      sortColumn:
        type: string
    type: object
  dto.PageForMultSearchDTO:
    properties:
      count:
        type: integer
      page:
        type: integer
      pageLimit:
        type: integer
      search:
        additionalProperties:
          type: string
        type: object
      sort:
        type: string
      sortColumn:
        type: string
    type: object
  forestagedto.BaseConfigDTO:
    properties:
      imgUrl:
        type: string
    type: object
  forestagedto.BaseForestageConfigDTO:
    properties:
      baseConfig:
        $ref: '#/definitions/forestagedto.BaseConfigDTO'
    type: object
  forestagedto.CarouselDTO:
    properties:
      carousel:
        $ref: '#/definitions/forestagedto.CarouselData'
      picture:
        items:
          $ref: '#/definitions/forestagedto.PictureData'
        type: array
    type: object
  forestagedto.CarouselData:
    properties:
      endTime:
        type: string
      id:
        type: integer
      name:
        type: string
      startTime:
        type: string
    type: object
  forestagedto.CategoryDTO:
    properties:
      category:
        items:
          type: string
        type: array
    type: object
  forestagedto.PictureData:
    properties:
      alt:
        type: string
      id:
        type: integer
      name:
        type: string
      url:
        type: string
      weight:
        type: integer
    type: object
  forestagedto.PictureListData:
    properties:
      alt:
        type: string
      id:
        type: integer
      name:
        type: string
      pictureUrl:
        type: string
      status:
        type: boolean
      url:
        type: string
      weight:
        type: integer
    type: object
  forestagedto.ProductionDTO:
    properties:
      pageData:
        $ref: '#/definitions/dto.PageDTO'
      productionList:
        items:
          $ref: '#/definitions/forestagedto.ProductionData'
        type: array
    type: object
  forestagedto.ProductionData:
    properties:
      categories:
        type: string
      createTime:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      images:
        type: string
      name:
        type: string
      options:
        type: string
      price:
        type: integer
      priceMin:
        type: integer
      productId:
        type: integer
      url:
        type: string
    type: object
  forestagedto.ProductionDetailDTO:
    properties:
      production:
        $ref: '#/definitions/forestagedto.ProductionDetailData'
    type: object
  forestagedto.ProductionDetailData:
    properties:
      attribute:
        type: string
      categories:
        type: string
      createTime:
        type: string
      description:
        type: string
      historicalSold:
        type: integer
      id:
        type: integer
      image:
        type: string
      images:
        type: string
      likedCount:
        type: integer
      name:
        type: string
      options:
        type: string
      price:
        type: integer
      priceMin:
        type: integer
      productId:
        type: integer
      stock:
        type: integer
      url:
        type: string
    type: object
  forestagedto.ProductionRankDTO:
    properties:
      productionList:
        items:
          $ref: '#/definitions/forestagedto.ProductionRankData'
        type: array
    type: object
  forestagedto.ProductionRankData:
    properties:
      amount:
        type: integer
      categories:
        type: string
      createTime:
        type: string
      description:
        type: string
      historicalSold:
        type: integer
      id:
        type: integer
      image:
        type: string
      images:
        type: string
      likedCount:
        type: integer
      name:
        type: string
      options:
        type: string
      price:
        type: integer
      priceMin:
        type: integer
      productId:
        type: integer
      stock:
        type: integer
      url:
        type: string
      weight:
        type: integer
    type: object
info:
  contact: {}
paths:
  /backstage/admin/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.LoginResponseDTO'
      security:
      - BearerAuth: []
      summary: Backstage login
      tags:
      - Backstage
  /backstage/cache:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Cache View
      tags:
      - Forestage
  /backstage/cache/delete/{cacheName}:
    delete:
      consumes:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Cache Any Delete
      tags:
      - Forestage
  /backstage/carousel:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: int default
        in: query
        name: page
        required: true
        type: integer
      - description: int enums
        enum:
        - 15
        - 20
        - 30
        - 40
        - 50
        in: query
        name: pageLimit
        required: true
        type: integer
      - description: string enums
        enum:
        - asc
        - desc
        in: query
        name: sort
        required: true
        type: string
      - description: string enums
        enum:
        - id
        - key
        in: query
        name: sortColumn
        required: true
        type: string
      - default: ""
        description: string default
        in: query
        name: search
        type: string
      - default: ""
        description: string default
        in: query
        name: searchCategory
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.CarouselListDTO'
      security:
      - BearerAuth: []
      summary: Carousel View
      tags:
      - Backstage-Carousel
  /backstage/carousel/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.CarouselIdDTO'
      security:
      - BearerAuth: []
      summary: Carousel By Id
      tags:
      - Backstage-Carousel
  /backstage/carousel/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.CarouselCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Carousel Create
      tags:
      - Backstage-Carousel
  /backstage/carousel/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Carousel Delete
      tags:
      - Backstage-Carousel
  /backstage/carousel/edit/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.CarouselCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Carousel Edit
      tags:
      - Backstage-Carousel
  /backstage/jwt/check:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: string
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.JwtUserInfoDTO'
      security:
      - BearerAuth: []
      summary: Backstage CheckToken
      tags:
      - Backstage
  /backstage/jwt/refreshtoken:
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.JwtRefTokenDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.LoginResponseDTO'
      security:
      - BearerAuth: []
      summary: Backstage RefreshToken
      tags:
      - Backstage
  /backstage/menu:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: int default
        in: query
        name: page
        required: true
        type: integer
      - description: int enums
        enum:
        - 15
        - 20
        - 30
        - 40
        - 50
        in: query
        name: pageLimit
        required: true
        type: integer
      - description: string enums
        enum:
        - asc
        - desc
        in: query
        name: sort
        required: true
        type: string
      - description: string enums
        enum:
        - id
        - key
        - url
        in: query
        name: sortColumn
        required: true
        type: string
      - default: ""
        description: string default
        in: query
        name: search
        type: string
      - default: ""
        description: string default
        in: query
        name: searchCategory
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.MenuViewListDTO'
      security:
      - BearerAuth: []
      summary: Menu View
      tags:
      - Backstage-Menu
  /backstage/menu/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.MenuIdDTO'
      security:
      - BearerAuth: []
      summary: Menu By Id
      tags:
      - Backstage-Menu
  /backstage/menu/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.MenuCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Menu Create
      tags:
      - Backstage-Menu
  /backstage/menu/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Menu Delete
      tags:
      - Backstage-Menu
  /backstage/menu/edit/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.MenuCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Menu Edit
      tags:
      - Backstage-Menu
  /backstage/menu/list:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.MenuDTO'
      security:
      - BearerAuth: []
      summary: Menu List
      tags:
      - Backstage-Menu
  /backstage/menu/parent/list:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.MenuDTO'
      security:
      - BearerAuth: []
      summary: Menu Parent List
      tags:
      - Backstage-Menu
  /backstage/role:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: int default
        in: query
        name: page
        required: true
        type: integer
      - description: int enums
        enum:
        - 15
        - 20
        - 30
        - 40
        - 50
        in: query
        name: pageLimit
        required: true
        type: integer
      - description: string enums
        enum:
        - asc
        - desc
        in: query
        name: sort
        required: true
        type: string
      - description: string enums
        enum:
        - id
        - key
        in: query
        name: sortColumn
        required: true
        type: string
      - default: ""
        description: string default
        in: query
        name: search
        type: string
      - default: ""
        description: string default
        in: query
        name: searchCategory
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.RoleListDTO'
      security:
      - BearerAuth: []
      summary: Role View
      tags:
      - Backstage-Role
  /backstage/role/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.RoleIdDTO'
      security:
      - BearerAuth: []
      summary: Role By Id
      tags:
      - Backstage-Role
  /backstage/role/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.RoleCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Role Create
      tags:
      - Backstage-Role
  /backstage/role/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Role Delete
      tags:
      - Backstage-Role
  /backstage/role/edit/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.RoleCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Role Edit
      tags:
      - Backstage-Role
  /backstage/user:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: int default
        in: query
        name: page
        required: true
        type: integer
      - description: int enums
        enum:
        - 15
        - 20
        - 30
        - 40
        - 50
        in: query
        name: pageLimit
        required: true
        type: integer
      - description: string enums
        enum:
        - asc
        - desc
        in: query
        name: sort
        required: true
        type: string
      - description: string enums
        enum:
        - id
        - name
        - login_name
        in: query
        name: sortColumn
        required: true
        type: string
      - default: ""
        description: string default
        in: query
        name: search
        type: string
      - default: ""
        description: string default
        in: query
        name: searchCategory
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.UserListDTO'
      security:
      - BearerAuth: []
      summary: User View
      tags:
      - Backstage-User
  /backstage/user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backstagedto.UserIdDTO'
      security:
      - BearerAuth: []
      summary: User By Id
      tags:
      - Backstage-User
  /backstage/user/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.UserCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: User Create
      tags:
      - Backstage-User
  /backstage/user/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: User Delete
      tags:
      - Backstage-User
  /backstage/user/edit/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.UserCreateOrEditDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: User Edit
      tags:
      - Backstage-User
  /backstage/user/password/edit/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.UserEditPwdDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: User Passowrd Edit
      tags:
      - Backstage-User
  /backstage/user/password/reset/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/backstagedto.UserEditPwdDTO'
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: User Passowrd Reset
      tags:
      - Backstage-User
  /carousel/list:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forestagedto.CarouselDTO'
      security:
      - BearerAuth: []
      summary: Carousel
      tags:
      - Forestage
  /category/list:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forestagedto.CategoryDTO'
      security:
      - BearerAuth: []
      summary: Category
      tags:
      - Forestage
  /file/{id}:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Get File (image...)
      tags:
      - Forestage
  /forestage/config:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forestagedto.BaseForestageConfigDTO'
      security:
      - BearerAuth: []
      summary: Forestage config
      tags:
      - Forestage
  /production/{id}:
    get:
      consumes:
      - application/json
      operationId: "1"
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forestagedto.ProductionDetailDTO'
      security:
      - BearerAuth: []
      summary: Production detail
      tags:
      - Forestage
  /production/list:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: int default
        in: query
        name: page
        required: true
        type: integer
      - description: int enums
        enum:
        - 15
        - 20
        - 30
        - 40
        - 50
        in: query
        name: pageLimit
        required: true
        type: integer
      - description: string enums
        enum:
        - asc
        - desc
        in: query
        name: sort
        required: true
        type: string
      - description: string enums
        enum:
        - PName
        - PId
        - PCategory
        - PCreTime
        in: query
        name: sortColumn
        required: true
        type: string
      - default: ""
        description: string default
        in: query
        name: search
        type: string
      - default: ""
        description: string default
        in: query
        name: searchCategory
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forestagedto.ProductionDTO'
      security:
      - BearerAuth: []
      summary: Production list
      tags:
      - Forestage
  /production/rank/{count}:
    get:
      consumes:
      - application/json
      operationId: "10"
      parameters:
      - description: count
        in: path
        name: count
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forestagedto.ProductionRankDTO'
      security:
      - BearerAuth: []
      summary: Production rank
      tags:
      - Forestage
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
